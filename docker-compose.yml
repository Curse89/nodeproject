version: '3'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: nodeproject-docker-frontend
    command: serve -s build -l 3000
    #ports:
    #  - "3000:3000"
    restart: unless-stopped
    # stdin_open: true
    # tty: true
    # volumes:
    #   - ./frontend/src:/usr/src/app/src
    networks:
      - nodeproject-docker-network

  api:
    build: ./api
    container_name: nodeproject-docker-api
    command: npm run start
    restart: unless-stopped
    # ports:
    #   - "3001:3001"
    networks:
      - nodeproject-docker-network
    environment:
      - PORT=3001
      # - HOST=http://realworld-docker.com
      - MONGO_URL=mongodb://api_db:27017/api
      - AUTH_API_URL=http://auth:3002/api
    depends_on:
      - api_db
    networks:
      - nodeproject-docker-network
  
  auth:
    build: ./auth
    container_name: realworld-docker-auth
    command: npm run start
    restart: unless-stopped
    # ports:
    #   - "3002:3002"
    environment:
      - PORT=3002
      # - HOST=http://realworld-docker.com
      - MONGO_URL=mongodb://auth_db:27017/auth
      - API_URL=http://api:3001/api
    depends_on:
      - auth_db
    networks:
      - nodeproject-docker-network

  auth_db:
    image: mongo:latest
    container_name: nodeproject-docker-auth-db
    volumes:
      - mongodb_auth:/data/db
    networks:
      - nodeproject-docker-network

  api_db:
    image: mongo:latest
    container_name: nodeproject-docker-api-db
    volumes:
      - mongodb_api:/data/db
    networks:
      - nodeproject-docker-network

  nginx:
    image: nginx:stable-alpine
    container_name: nodeproject-docker-nginx
    ports:
      - "81:81"
    volumes:
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - frontend
      - api
      - auth
    networks:
      - nodeproject-docker-network
    
volumes:
  mongodb_api:
  mongodb_auth:

networks:
  nodeproject-docker-network:
    driver: bridge